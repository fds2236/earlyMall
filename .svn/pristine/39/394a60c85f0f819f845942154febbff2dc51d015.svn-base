package com.eansoft.mall.admin.controller;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.eansoft.mall.admin.service.AdminService;
import com.eansoft.mall.member.vo.MemberVo;

@Controller
@RequestMapping("/admin")
public class AdminController {	
	@Autowired
	private AdminService adminService;
	
	private final Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@GetMapping("/dash")
	public String dashBoard(HttpServletRequest request,
							Model model) {
		
		// 내정보 조회 - 기본은 세션에 있음
		HttpSession session = request.getSession();
		MemberVo memberInfo = (MemberVo) session.getAttribute("memberInfo");
		
		String page = "";
		
		if(memberInfo == null || !"00".equals(memberInfo.getmType())) {
			page = "main";
		} else {
			page = "admin/adminDash";
		}
		
		Map<String, Object> member = adminService.getAllMember();
		model.addAttribute("memMonth", member.get("mon"));
		model.addAttribute("memToday", member.get("day"));
		
		//최근 한달 회원가입 건수
//		model.addAttribute("memMonth", adminService.getMonthMember());
		//오늘 회원가입 건수
//		model.addAttribute("memToday", adminService.getTodayMember());
		//최근 한달 총 주문 건수
		model.addAttribute("orderMonth", adminService.getMonthOrder());
		//오늘 총 주문 건수
		model.addAttribute("orderToday", adminService.getTodayOrder());
		//최근 한달 이벤트 등록 건수
		model.addAttribute("eventMonth", adminService.getMonthEvent());
		//오늘 이벤트 등록 건수
		model.addAttribute("eventToday", adminService.getTodayEvent());
		
		return page;
	}

	
	// 상품관리 -tr
	@GetMapping("/goodsManage")
	public String goodsManagement(Model model) {
		 //goods카테고리 list
		model.addAttribute("goodsCateList", adminService.getGoodsCate());		
		return "admin/adminGoodsManage";
	}
	
	//상품관리 -tr
	@GetMapping("/goodsMg")
	@ResponseBody
	public Map<String, Object> goodsMg(
			@RequestParam Map<String, Object> bodyMap
			
//			@RequestParam(value="gCateCd") String gCateCd,
//            @RequestParam(value="searchKeyword") String searchKeyword,
//            @RequestParam(value="gShowYn") String gShowYn,           
//            @RequestParam(value="gDelYn") String gDelYn){		
			){	
//		Map<String, Object> map = new HashMap<String, Object>();
//	       map.put("gCateCd", gCateCd);
//	       map.put("searchKeyword", searchKeyword);
//	       map.put("gShowYn", gShowYn);
//	       map.put("gDelYn", gDelYn);	      
		
//	       logger.info("gCateCd", gCateCd);
		
		//logger.info("bodyMap --- {}", bodyMap);
		
		return adminService.getSearchGoodsList(bodyMap);		
	}
	
	
	
	// 관리자 주문관리
	@GetMapping("/orderManage") 
	public String orderManage() {
		
		return "admin/adminOrderManage";
	}
	
	// 관리자 주문관리
	@GetMapping("/orderMg")
	@ResponseBody
	public Map<String, Object> orderMg(@RequestParam Map<String, Object> bodyMap){		

		 return adminService.getOrderList(bodyMap);		
	}
	
	// 주문단계 업데이트
	@GetMapping("/updateOstep")
	@ResponseBody
	public int updateOstep(@RequestParam("oStep")String oStep,
							@RequestParam("oId")String oId) {
		logger.info("oStep: {}", oStep);
		logger.info("oId: {}", oId);
		return adminService.getUpdate(oStep, oId);
		
	}


	// 회원관리 페이지 접속
	@GetMapping("/memberList")
	public String memberList(HttpServletRequest request) {
		
		// 내정보 조회 - 기본은 세션에 있음
		HttpSession session = request.getSession();
		MemberVo memberInfo = (MemberVo) session.getAttribute("memberInfo");
		
		String page = "";
		
		if(memberInfo == null || !"00".equals(memberInfo.getmType())) {
			page = "main";
		} else {
			page = "admin/memberList";
		}
		
		return page;
	}
	 
	// 회원관리 리스트 조회, 검색
	@GetMapping("/getMemberList")
	@ResponseBody
	public Map<String, Object> getMemberList(@RequestParam Map<String, Object> memberMap) {
		logger.info("컨트롤러 memberMap: {}", memberMap);
		
		return adminService.getMemberList(memberMap);
	}
	
	
	// 이벤트관리
	@GetMapping("/eventManage") 
	public String eventManage() {		
		return "admin/adminEventManage";
	}
	
	@GetMapping("/getEventList") 
	@ResponseBody
	public Map<String, Object> getEventList() {
		Map<String, Object> map = new HashMap<String, Object>();
		logger.info("성공");	
		
		return adminService.getEventList();
	}
	
	
	// 회원등록 팝업
	@GetMapping("/insertMember")
	public String insertMemberPop() {
		return "admin/insertMember";
	}
	
	
	// 상품관리 일괄노출 -tr
	@GetMapping("/doAllViewY")
	@ResponseBody
	public String doAllViewY() {
		boolean result = false;
		result = adminService.updateAllViewY();		
		
		if(result == true) {
			return "success";
		}
		return "failure";
	}
	
	// 상품관리 일괄비노출 -tr
	@GetMapping("/doAllViewN")
	@ResponseBody
	public String doAllViewN() {
		boolean result = false;
		result = adminService.updateAllViewN();
		
		if(result == true) {
			return "success";
		}		
		return "failure";
	}
	
	// 상품관리 일괄삭제 -tr
	@GetMapping("/doAllDelY")
	@ResponseBody
	public String doAllDelY() {
		boolean result = false;
		result = adminService.updateAllDelY();
		
		if(result == true) {
			return "success";
		}
		return "failure";
	}
	
	// 상품관리 상품등록 -tr
	@GetMapping("/insertGoods")
	public String insertGoodsPop() {
		return "admin/insertGoods";
	}
	
	// 상품관리 상품등록 -tr
	@PostMapping("/insertGoods")
	public String insertGoodsPop(
					@RequestParam Map<String, Object> bodyMap,
					@RequestParam MultipartFile gImg,
					@RequestParam MultipartFile gImgDtl
			) throws IllegalStateException, IOException {				
		
		adminService.insertGoods(bodyMap, gImg, gImgDtl);
		
		return "redirect:/admin/insertGoods";
	}
	
}
