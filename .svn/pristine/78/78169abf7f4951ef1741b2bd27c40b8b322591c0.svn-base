package com.eansoft.mall.goods.controller;

import java.util.Map;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.ui.Model;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.eansoft.mall.goods.service.GoodsService;

@Controller
@RequestMapping("/goods")
public class GoodsController {
	@Autowired
	GoodsService goodsService;
	
	private final Logger logger = LoggerFactory.getLogger(this.getClass());
	
	@GetMapping("/cate")
	public String cateMain() {	
		return "goods/cateMain";
	}
	
	@GetMapping("/basket")
	public String basket() {
		return "goods/cart";
	}
	
	@GetMapping("/basketList")
	@ResponseBody
	public Map<String, Object> basketList(
			@RequestParam Map<String, Object> map){
		logger.info("받은 parameters: " + map);
		Map<String, Object> basketInfo = goodsService.getBasketList(map);
		logger.info("받은 basketInfo: " + basketInfo);
		return basketInfo;
	}
	
	@GetMapping("/basketCheck")
	@ResponseBody
	public boolean basketCheck(
			@RequestParam(value="mId") String mId,
			@RequestParam(value="gId") String gId) {
		logger.info("mId : " + mId);
		logger.info("gId : " + gId);
		return goodsService.getBasketCheck(mId, gId);	
	}
	
	@PostMapping("/basketAdd")
	@ResponseBody
	public int basketAdd(
			@RequestParam Map<String, Object> map) {
		logger.info("받은 parameters: " + map);
		return goodsService.getBasketAdd(map);  
	}
	
	@PostMapping("/basketListUpdate")
	@ResponseBody
	public int basketListUpdate(
			@RequestBody List<Map<String, Object>> saveList) {
	    logger.info("Received saveList: " + saveList);
	    int result = goodsService.getBasketQtyUpdate(saveList); 
	    return result;
	}
	
	@PostMapping("basketDelete")
	@ResponseBody
	public int basketDelete(
			@RequestParam(value="mId")String mId,
			@RequestParam(value="gId")String gId) {
		return goodsService.getBasketDel(mId, gId);
	}
	
	@GetMapping("eventList")
	@ResponseBody
	public List<Map<String, Object>> eventList() {
		return goodsService.getEventList();
	}
	
	// 동기(페이지 넘기고 모델에 담아서 반환하고싶음)
	@GetMapping("eventItemList")
	public String eventItemList(
			@RequestParam(value="eId")String eId,
			Model model){
		logger.info("eId : " + eId);
		List<Map<String, Object>> eventItemList = goodsService.getEventItemList(eId);
		model.addAttribute("eventItemList", eventItemList);
		logger.info("eventItemList : " + eventItemList);
		return "goods/eventItemList";
	}
	
	@GetMapping("itemList")
	@ResponseBody
	public List<Map<String, Object>> itemList(
			@RequestParam(value="sortType")String sortType){
		logger.info("sortType : " + sortType);
		return goodsService.getItemList(sortType);
	}
	
	
	//카테고리별 상품 목록 -tr
	@GetMapping("/CateGoodsList")
	@ResponseBody
	public Map<String, Object> cateGoods(@RequestParam Map<String, Object> map){
		//Map<String, Object> basketInfo = goodsService.getBasketList(map);
		Map<String, Object> cateGoodsList = goodsService.getCateGoodsList(map);
		return cateGoodsList;
	}


	//상품 상세 -tr
	@GetMapping("/detail")
	public String goodsDetail(@RequestParam String gId, Model model) {
		Map<String, Object> goodsDetail = goodsService.getGoodsDetail(gId);
		model.addAttribute("goodDetail" , goodsDetail);
		System.out.println("상세 = " + goodsDetail);
		return "goods/detail";
	}

	// 나중에 지우기 => 샘플페이지 때문에 만듦
	@GetMapping("/main2")
	public String main2() {
		return "main2";
	}

	
	
	
}
