<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>  
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>관리자 상품관리</title>
</head>

<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.14/themes/redmond/jquery-ui.css" type="text/css" />
<!-- jqGrid CSS -->
<link rel="stylesheet" href="//cdn.jsdelivr.net/jqgrid/4.6.0/css/ui.jqgrid.css" type="text/css" />


<!-- 스타일 -->
<style>
  /* 모달 스타일 */
  .modal {
    display: none; /* 기본적으로 숨김 */
    position: fixed; /* 고정 위치 */
    z-index: 1; /* 다른 요소들보다 위에 표시되도록 설정 */
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto; /* 스크롤 생성 */
    background-color: rgba(0, 0, 0, 0.4); /* 배경 투명도 설정 */
  }

  .modal-content {
    background-color: #fefefe; /* 모달 내용 배경색 */
    margin: 15% auto; /* 모달 위치 */
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px;
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }
</style>



<body>

<jsp:include page="../import/adminFrame.jsp"/>

<!-- The actual JQuery code -->
<script type="text/javascript" src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
<!-- The JQuery UI code -->
<script type="text/javascript" src="https://code.jquery.com/ui/1.10.3/jquery-ui.min.js"></script>
<!-- The jqGrid language file code-->
<script type="text/javascript" src="//cdn.jsdelivr.net/jqgrid/4.6.0/i18n/grid.locale-kr.js"></script>
<!-- The atual jqGrid code -->
<script type="text/javascript" src="//cdn.jsdelivr.net/jqgrid/4.6.0/jquery.jqGrid.src.js"></script>

<div style="float:left;margin:30px;">
<form id="searchForm">
카테고리
<select name="gCateCd" id="goodsGategory">
	<option value="">전체</option>
	<c:forEach var="gdsCate" items="${goodsCateList}">
		<option value="${gdsCate.DID}">${gdsCate.DNAME}</option>
	</c:forEach> 
</select>

상품명 <input id="goodsName" type="search" name="searchKeyword">

노출여부
<select name="gShowYn" id="goodsShowYn">
    <option value="">전체</option>
    <option value="Y">Y</option>
    <option value="N">N</option>  
</select>

삭제여부
<select name="gDelYn" id="goodsDelYn">
    <option value="">전체</option>
    <option value="Y">Y</option>
    <option value="N">N</option>  
</select>

<button type="button" onclick="javascript:fnSearch();">조회</button>

</form>

<button type="button" onclick="javascript:openModal();">상품등록</button>
<button type="button" onclick="javascript:doAllViewY();">일괄노출</button>
<button type="button" onclick="javascript:doAllViewN();">일괄비노출</button>
<button type="button" onclick="javascript:doAllDelY();">일괄삭제</button>

<!-- 모달 열기 버튼 -->
<div>
  <span onclick="openModal()">상품수정</span>
  <input type="button" value="X" onclick="javascript:closeModal();">
</div>

<div class="tableWrap">
    <table id="mainGrid"></table>
    <div id="pager"></div>    
</div>

</div>

<!-- HTML 모달 -->
<div id="myModal" class="modal" style="float:left;margin:30px;">
  <div class="modal-content">
    <span class="close">&times;</span>
    <form id="insertContents" enctype="multipart/form-data">
      <div>
        <div>
          <div>
            카테고리
            <select id="gCateCd" name="gCateCd">
              <c:forEach var="gdsCate" items="${goodsCateList}">
                <option value="${gdsCate.DID}">${gdsCate.DNAME}</option>
              </c:forEach>
            </select>
          </div>
          <div>
            상품명
            <input id="gName" type="text" name="gName" required>
          </div>
          <div>
            가격
            <input id="gPrice" type="number" name="gPrice" required>
          </div>
          <div>
            수량
            <input id="gQty" type="number" name="gQty" required>
          </div>
          <div>
            대표이미지
            <input id="gImg" type="file" name="gImg" required>
          </div>
          <div>
            상세이미지
            <input id="gImgDtl" type="file" name="gImgDtl" required>
          </div>
          <div>
            노출여부
            <select id="gShowYn" name="gShowYn">
              <option value="N">N</option>
              <option value="Y">Y</option>
            </select>
          </div>
          <div>
            삭제여부
            <select id="gDelYn" name="gDelYn">
              <option value="N">N</option>
              <option value="Y">Y</option>
            </select>
          </div>
        </div>
        <button id="registerBtn" type="submit">상품등록</button>
        <button id="delBtn" type="button">삭제</button>
        <button class="close" type="button">닫기</button>
      </div>
    </form>
  </div>
</div>





</body>

<script type="text/javascript">
var rowData;

$(document).ready(function() {   
    
	setManageTitle("상품관리");
	
    // fnSearch(); // 주석 처리: 페이지 로드 시 자동으로 호출되지 않도록 변경
   
  var searchResultColNames =  ['아이디', '카테고리', '상품명', '가격','수량', '대표이미지','상세이미지','노출여부','삭제여부','수정일시'];
  var searchResultColModel =  [
    { 	name: 'G_ID', 
    	index: 'G_ID', 
    	align: 'center', 
    	sorttype: 'number',
    	formatter: function(cellValue, options, rowObject) {
    		var gId = rowObject.G_ID; // 'G_ID'의 값 가져오기
            var sampleUrl = 'https://example.com?id=' + gId; // 샘플 주소
            return '<a href="' + sampleUrl + '">' + gId + '</a>';
          }
    },
    {  	name: 'G_CATE_CD', 
        index: 'G_CATE_CD', 
        align: 'center',
        
        formatter: function(cellValue, options, rowObject) {
          if (cellValue === '10') {
            return '가전';
          } else if (cellValue === '20') {
            return '컴퓨터';
          } else {
            return '모바일';
          }
        }
    },
    { name: 'G_NAME', index: 'G_NAME', align: 'center' },
    { name: 'G_PRICE', index: 'G_PRICE', align: 'right', sorttype: 'number', formatter:'integer',formatoptions: { defaultValue: '', thousandsSeparator: ',' } },
    { name: 'G_QTY', index: 'G_QTY', align: 'right', sorttype: 'number' },
    { name: 'G_IMG', index: 'G_IMG', align: 'left' },
    { name: 'G_IMG_DTL', index: 'G_IMG_DTL', align: 'left' },
    { name: 'G_SHOW_YN', index: 'G_SHOW_YN', align: 'center' },
    { name: 'G_DEL_YN', index: 'G_DEL_YN', align: 'center' },
    { 
      name: 'MODIFY_DT', 
      index: 'MODIFY_DT', 
      align: 'center',
      formatter: function(cellValue, options, rowObject) {
        var date = new Date(cellValue);
        var formattedDate = date.toLocaleString('ko-KR', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' });
        return formattedDate;
      }
    }
  ];
                
  $("#mainGrid").jqGrid({
    url: "/admin/goodsMg",
    datatype: "json",
    mtype: "GET",
    postData: {

    },
    height: 400,
    width: 1100,
    colNames: searchResultColNames,
    colModel: searchResultColModel,
    rowNum: 10,
    rowList: [10, 20, 30],
    pager: "#pager",
    jsonReader: {
      repeatitems: false,
      root: "dataList",
      page: function(obj) {
        return 1;
      },
      total: function(obj) {
        return obj.totalPages;
      },
      records: function(obj) {
        return obj.totalRecords;
      }
    },
//     onSelectRow: function(rowId) {
//         // 행 선택 이벤트 핸들러
//         var rowData = $("#mainGrid").getRowData(rowId);
//         // rowData에 선택한 행의 데이터가 포함됩니다.
//         console.log(rowData);
//         // 선택한 행의 데이터를 사용하여 추가 작업 수행 가능
//         //editPopup('editGoods', 'editGoods',rowData);     
//     },
    multiselect:true, // select박스
    rownumbers:true, //row 숫자 붙여줌
    loadonce: true, // 데이터를 한 번에 모두 불러옴
    gridview: true, // 빠른 그리드 렌더링을 위해 사용
    viewrecords: true, // 총 레코드 수 표시
    caption: "상품 목록", // 그리드 제목
    loadComplete: function(data) {
      console.log("서버에서 넘어온 데이터", data.dataList);  
      
    }
    
  });
  
});

function fnSearch() {
	  var goodsGategory = $("#goodsGategory").val();
	  var searchKeyword = $("#goodsName").val();
	  var goodsShowYn = $("#goodsShowYn").val();	  
	  var goodsDelYn = $("#goodsDelYn").val();
	// 입력 값 받아서 저장		
	
	$("#mainGrid").setGridParam({
		postData: {
	            gCateCd: goodsGategory,
	            searchKeyword: searchKeyword,
	            gShowYn: goodsShowYn,
	            gDelYn: goodsDelYn
	          },
		gridComplete: function() {
			
		}
	}).trigger("reloadGrid");
	
	$("#mainGrid").jqGrid('setGridParam', {
		url: '/admin/goodsMg',
		mtype: 'GET',
		datatype: 'json'
	}).trigger("reloadGrid");
}

function allViewY(arrayGId) {
	  $.ajax({
	    url: '/admin/doAllViewY',
	    type: 'GET',	    
	    data: { 'gId': arrayGId },
	    success: function(response) {
	    	  if (response === "success") {
	    		  console.log("response = " + response);
		    	  console.log('일괄 노출 성공');
	    	    // 성공적으로 노출 업데이트된 경우
	    	    // 추가 작업 수행
	    	    fnSearch();
	    	  } else {
	    	    // 노출 업데이트에 실패한 경우
	    	    // 실패 처리에 대한 작업 수행
	    	  }
	    	},
	    error: function(error) {
	      console.log('일괄 노출 실패:', error);
	    }
	  });
	}



function allViewN(arrayGId) {
	  $.ajax({
	    url: '/admin/doAllViewN',
	    type: 'GET',
	    data: { 'gId': arrayGId },	   
	    success: function(response) {
	    	  if (response === "success") {
	    		  console.log("response = " + response);
		    	  console.log('일괄 비노출 성공');
	    	    // 성공적으로 노출 업데이트된 경우
	    	    // 추가 작업 수행
	    	    fnSearch();
	    	  } else {
	    	    // 노출 업데이트에 실패한 경우
	    	    // 실패 처리에 대한 작업 수행
	    	  }
	    	},
	    error: function(error) {
	      console.log('일괄 비노출 실패:', error);
	    }
	  });
	}
	
function allDelY(arrayGId) {
	  $.ajax({
	    url: '/admin/doAllDelY',
	    type: 'GET',
	    data: { 'gId': arrayGId },
	    success: function(response) {
	    	  if (response === "success") {
	    		  console.log("response = " + response);
		    	  console.log('일괄 삭제 성공');
	    	    // 성공적으로 노출 업데이트된 경우
	    	    // 추가 작업 수행
	    	    fnSearch();
	    	  } else {
	    	    // 노출 업데이트에 실패한 경우
	    	    // 실패 처리에 대한 작업 수행
	    	  }
	    	},
	    error: function(error) {
	      console.log('일괄 삭제 실패:', error);
	    }
	  });
	}	
	
// function insertPopup(page, name) {
// 	window.open(page, name, "width=1000, height=700, left=0, top=0");
// }


// function editPopup(page, name, rowData) {
// 	  var url = page + "?";
// 	  for (var key in rowData) {
// 	    if (rowData.hasOwnProperty(key)) {
// 	      url +=
// 	        encodeURIComponent(key) +
// 	        "=" +
// 	        encodeURIComponent(rowData[key]) +
// 	        "&";
// 	    }
// 	  }
// 	  // 자식 페이지 열기
// 	  var childWindow = window.open(url, name, "width=800, height=600");  //모달페이지 html 마크업
// 	  // 자식 페이지로 rowData 전달
// 	  childWindow.rowData = rowData;	  	
// 	}


//선택박스 선택한 값 뽑아 내는 함수
function getSelectedCellValues() { 
	  var selectedRowIds = $("#mainGrid").jqGrid("getGridParam", "selarrrow");
	  var selectedCellValues = [];

	  for (var i = 0; i < selectedRowIds.length; i++) {
	    var rowData = $("#mainGrid").jqGrid("getRowData", selectedRowIds[i]);
	    //var cellId = rowData.G_ID; //선택 셀의 굿즈 id 저장
	    selectedCellValues.push(rowData);
	  }
	  return selectedCellValues;
	}


function doAllViewY() {
	var selectedCellValues = getSelectedCellValues();
	for (var j = 0; j < selectedCellValues.length; j++) {
		var arrayGId = selectedCellValues[j].G_ID;
	    allViewY(arrayGId);
	  }
	}


function doAllViewN() {
	  var selectedCellValues = getSelectedCellValues();
	  for (var j = 0; j < selectedCellValues.length; j++) {
	    var arrayGId = selectedCellValues[j].G_ID;
	    allViewN(arrayGId);
	  }
	}


function doAllDelY(){
	var selectedCellValues = getSelectedCellValues();
	for (var j = 0; j < selectedCellValues.length; j++) {
		var arrayGId = selectedCellValues[j].G_ID;
		allDelY(arrayGId);
	}
}


</script>

<script>
  // 모달 열기
  function openModal() {
    document.getElementById("myModal").style.display = "block";
  }

  // 모달 닫기
  function closeModal() {
    document.getElementById("myModal").style.display = "none";
  }

  // 닫기 버튼 클릭 시 모달 닫기
  document.getElementsByClassName("close")[0].onclick = function() {
    closeModal();
  };

  // 다른 곳을 클릭하면 모달 닫기
  window.onclick = function(event) {
    if (event.target == document.getElementById("myModal")) {
      closeModal();
    }
  };
</script>

<script type="text/javascript">

//상품 등록 버튼 click하면
$("#registerBtn").click(function() {
  if (confirm("등록하시겠습니까?")) {
    var form = $("#insertContents")[0];
    var formData = new FormData(form);

    $.ajax({
      url: "/admin/insertGoods",
      type: "POST",
      enctype: "multipart/form-data",
      data: formData,
      processData: false,
      contentType: false,
      success: function(response) {
        // 등록 성공 시 처리할 코드 작성
        console.log("insert 등록성공");
      },
      error: function(xhr, status, error) {
        // 오류 발생 시 처리할 코드 작성
        console.log("오류 발생:", error);
      }
    });
  }
});

</script>


</html>